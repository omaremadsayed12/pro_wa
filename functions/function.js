const _0x28a252 = _0x5de3; (function (_0x5689ea, _0x212e20) { const _0x2a0ab0 = _0x5de3, _0x5e2f12 = _0x5689ea(); while (!![]) { try { const _0x3236b7 = -parseInt(_0x2a0ab0(0xee)) / 0x1 + parseInt(_0x2a0ab0(0x13b)) / 0x2 * (parseInt(_0x2a0ab0(0x14d)) / 0x3) + parseInt(_0x2a0ab0(0x96)) / 0x4 + parseInt(_0x2a0ab0(0xdd)) / 0x5 + parseInt(_0x2a0ab0(0x9c)) / 0x6 + -parseInt(_0x2a0ab0(0x104)) / 0x7 * (-parseInt(_0x2a0ab0(0x134)) / 0x8) + -parseInt(_0x2a0ab0(0x13c)) / 0x9; if (_0x3236b7 === _0x212e20) break; else _0x5e2f12['push'](_0x5e2f12['shift']()); } catch (_0x12d51e) { _0x5e2f12['push'](_0x5e2f12['shift']()); } } }(_0x1fd4, 0xe7955)); const fs = require('fs'), path = require('path'), moment = require(_0x28a252(0x8c)), { query } = require(_0x28a252(0x129)), { default: axios } = require(_0x28a252(0x11e)), randomstring = require('randomstring'), { getIOInstance } = require('../socket'), fetch = require(_0x28a252(0x103)), mime = require(_0x28a252(0x132)), nodemailer = require(_0x28a252(0x6b)), unzipper = require(_0x28a252(0xbb)); async function runChatbot(_0x4dca46, _0xdd5d9c, _0x34a43e, _0x5184e6, _0x1298a7) { const _0x5ca6f8 = _0x28a252, _0x1a719b = _0x4dca46, _0x501b79 = _0x4dca46?.[_0x5ca6f8(0x11d)] > 0x0 ? !![] : ![]; if (!_0x501b79) { console['log'](_0x5ca6f8(0x12c), _0x5184e6); const _0x281e3a = JSON[_0x5ca6f8(0x114)](_0x1a719b?.[_0x5ca6f8(0x99)])?.['map'](_0x424426 => _0x424426[_0x5ca6f8(0xed)]), _0x33d685 = convertNumberToRandomString(_0x5184e6 || ''), _0x153f19 = JSON[_0x5ca6f8(0x114)](_0x4dca46?.[_0x5ca6f8(0xf8)]); if (_0x281e3a[_0x5ca6f8(0x73)](_0x5184e6)) { const _0x3f0fde = __dirname + _0x5ca6f8(0xc1) + _0x34a43e + '/' + _0x153f19?.[_0x5ca6f8(0xd6)] + _0x5ca6f8(0xbf), _0x3dfc80 = __dirname + _0x5ca6f8(0xa0) + _0x34a43e + '/' + _0x153f19?.[_0x5ca6f8(0xd6)] + _0x5ca6f8(0xbf), _0x5588d9 = readJsonFromFile(_0x3f0fde), _0x75fbc8 = readJsonFromFile(_0x3dfc80); if (_0x5588d9[_0x5ca6f8(0xdf)] > 0x0 && _0x75fbc8[_0x5ca6f8(0xdf)] > 0x0) { const _0x5c049b = _0x75fbc8[_0x5ca6f8(0xb5)](_0x5dfc20 => _0x5dfc20[_0x5ca6f8(0xa2)]?.[_0x5ca6f8(0x14e)]() === _0xdd5d9c?.['toLowerCase']()), _0x4621c8 = _0x5588d9[_0x5ca6f8(0xb5)](_0x549900 => _0x549900?.['id'] === _0x5c049b[0x0]?.[_0x5ca6f8(0xc2)]); console[_0x5ca6f8(0xec)]({ 'answer': _0x4621c8[_0x5ca6f8(0xdf)] > 0x0 ? 'ANS\x20FOUND' : _0x5ca6f8(0x138) }); if (_0x4621c8?.[_0x5ca6f8(0xdf)] > 0x0) for (const _0x4f29cd of _0x4621c8) { const _0xc091c9 = { 'type': _0x4f29cd?.[_0x5ca6f8(0x89)]?.[_0x5ca6f8(0xe8)]?.[_0x5ca6f8(0x14e)](), 'metaChatId': '', 'msgContext': _0x4f29cd?.[_0x5ca6f8(0x112)], 'reaction': '', 'timestamp': '', 'senderName': _0x1298a7, 'senderMobile': _0x5184e6, 'status': _0x5ca6f8(0x121), 'star': ![], 'route': 'OUTGOING' }; await sendMetaMsg(_0x34a43e, _0x4f29cd?.[_0x5ca6f8(0x112)], _0x5184e6, _0xc091c9, _0x33d685); } else { const _0x4fa77e = _0x75fbc8['filter'](_0x13a6a2 => _0x13a6a2[_0x5ca6f8(0xa2)]?.[_0x5ca6f8(0x14e)]() === _0x5ca6f8(0x142)?.['toLowerCase']()), _0x58a9e4 = _0x5588d9[_0x5ca6f8(0xb5)](_0x51e430 => _0x51e430?.['id'] === _0x4fa77e[0x0]?.[_0x5ca6f8(0xc2)]); for (const _0x530cca of _0x58a9e4) { const _0x3622d6 = { 'type': _0x530cca?.['state']?.[_0x5ca6f8(0xe8)]?.['toLowerCase'](), 'metaChatId': '', 'msgContext': _0x530cca?.[_0x5ca6f8(0x112)], 'reaction': '', 'timestamp': '', 'senderName': _0x1298a7, 'senderMobile': _0x5184e6, 'status': _0x5ca6f8(0x121), 'star': ![], 'route': 'OUTGOING' }; await sendMetaMsg(_0x34a43e, _0x530cca?.[_0x5ca6f8(0x112)], _0x5184e6, _0x3622d6, _0x33d685); } } } } } else { console[_0x5ca6f8(0xec)](_0x5ca6f8(0x116), _0x5184e6); const _0x2a480 = convertNumberToRandomString(_0x5184e6 || ''), _0x10549c = JSON[_0x5ca6f8(0x114)](_0x4dca46?.[_0x5ca6f8(0xf8)]), _0x197378 = __dirname + _0x5ca6f8(0xc1) + _0x34a43e + '/' + _0x10549c?.[_0x5ca6f8(0xd6)] + '.json', _0x2aa368 = __dirname + _0x5ca6f8(0xa0) + _0x34a43e + '/' + _0x10549c?.['flow_id'] + _0x5ca6f8(0xbf), _0x2602dd = readJsonFromFile(_0x197378), _0x234cc5 = readJsonFromFile(_0x2aa368); if (_0x2602dd[_0x5ca6f8(0xdf)] > 0x0 && _0x234cc5[_0x5ca6f8(0xdf)] > 0x0) { const _0x4a2304 = _0x234cc5[_0x5ca6f8(0xb5)](_0x3deec9 => _0x3deec9['sourceHandle']?.[_0x5ca6f8(0x14e)]() === _0xdd5d9c?.[_0x5ca6f8(0x14e)]()), _0xd0a243 = _0x2602dd['filter'](_0x22b7c4 => _0x22b7c4?.['id'] === _0x4a2304[0x0]?.['target']); console[_0x5ca6f8(0xec)]({ 'answer': _0xd0a243[_0x5ca6f8(0xdf)] > 0x0 ? _0x5ca6f8(0x88) : _0x5ca6f8(0x138) }); if (_0xd0a243?.['length'] > 0x0) for (const _0x342ed5 of _0xd0a243) { const _0x7d950a = { 'type': _0x342ed5?.['state']?.['dialogType']?.[_0x5ca6f8(0x14e)](), 'metaChatId': '', 'msgContext': _0x342ed5?.[_0x5ca6f8(0x112)], 'reaction': '', 'timestamp': '', 'senderName': _0x1298a7, 'senderMobile': _0x5184e6, 'status': _0x5ca6f8(0x121), 'star': ![], 'route': _0x5ca6f8(0x119) }; await sendMetaMsg(_0x34a43e, _0x342ed5?.[_0x5ca6f8(0x112)], _0x5184e6, _0x7d950a, _0x2a480); } else { const _0xd00cdb = _0x234cc5[_0x5ca6f8(0xb5)](_0x15ce55 => _0x15ce55[_0x5ca6f8(0xa2)]?.['toLowerCase']() === _0x5ca6f8(0x142)?.[_0x5ca6f8(0x14e)]()), _0x47c1a9 = _0x2602dd[_0x5ca6f8(0xb5)](_0x1e295b => _0x1e295b?.['id'] === _0xd00cdb[0x0]?.[_0x5ca6f8(0xc2)]); for (const _0x485fbc of _0x47c1a9) { const _0x5c9b77 = { 'type': _0x485fbc?.[_0x5ca6f8(0x89)]?.['dialogType']?.['toLowerCase'](), 'metaChatId': '', 'msgContext': _0x485fbc?.['msgContent'], 'reaction': '', 'timestamp': '', 'senderName': _0x1298a7, 'senderMobile': _0x5184e6, 'status': 'sent', 'star': ![], 'route': _0x5ca6f8(0x119) }; await sendMetaMsg(_0x34a43e, _0x485fbc?.[_0x5ca6f8(0x112)], _0x5184e6, _0x5c9b77, _0x2a480); } } } } } async function botWebhook(_0x5a4524, _0x56eb09, _0xe2c60b, _0x3fb378) { const _0x512f4e = _0x28a252, _0x44847e = await query(_0x512f4e(0xad), [_0x56eb09]); if (_0x44847e[0x0]?.[_0x512f4e(0x11f)]) { const _0x8a3dab = JSON[_0x512f4e(0x114)](_0x44847e[0x0]?.[_0x512f4e(0x11f)]); if (_0x8a3dab[_0x512f4e(0xb3)] > 0x0) { const _0x108eea = await query(_0x512f4e(0x145), [_0x56eb09, 0x1]); _0x108eea['length'] > 0x0 && await Promise['all'](_0x108eea[_0x512f4e(0x7b)](_0x39c059 => runChatbot(_0x39c059, _0x5a4524, _0x56eb09, _0xe2c60b, _0x3fb378))); } else await query('UPDATE\x20chatbot\x20SET\x20active\x20=\x20?\x20WHERE\x20uid\x20=\x20?', [0x0, _0x56eb09]); } } async function saveMessage(_0x14567f, _0x3dadbb, _0x3d380f, _0x4f01ae) { const _0x565dfe = _0x28a252; console[_0x565dfe(0xec)](_0x565dfe(0xe6)); const _0x46fe34 = await query('SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', [_0x3dadbb]), _0x46e7cf = getCurrentTimestampInTimeZone(_0x46fe34[0x0]?.[_0x565dfe(0xc9)] || Date['now']() / 0x3e8), _0x5ea710 = convertNumberToRandomString(_0x14567f?.[_0x565dfe(0x9e)][0x0]?.[_0x565dfe(0xcd)][0x0]?.['value']?.[_0x565dfe(0x8e)][0x0]?.[_0x565dfe(0xa7)], _0x14567f?.[_0x565dfe(0x9e)][0x0]?.[_0x565dfe(0xcd)] ? _0x14567f?.[_0x565dfe(0x9e)][0x0]?.['changes'][0x0]?.[_0x565dfe(0xff)]?.[_0x565dfe(0x8e)][0x0]?.[_0x565dfe(0xc0)]?.[_0x565dfe(0xd1)] : 'NA'), _0x1cd442 = { 'type': _0x3d380f, 'metaChatId': _0x14567f?.[_0x565dfe(0x9e)][0x0]?.['changes'][0x0]?.[_0x565dfe(0xff)]?.[_0x565dfe(0x6d)][0x0]?.['id'], 'msgContext': _0x4f01ae, 'reaction': '', 'timestamp': _0x46e7cf, 'senderName': _0x14567f?.[_0x565dfe(0x9e)][0x0]?.['changes'] ? _0x14567f?.[_0x565dfe(0x9e)][0x0]?.['changes'][0x0]?.[_0x565dfe(0xff)]?.['contacts'][0x0]?.['profile']?.['name'] : 'NA', 'senderMobile': _0x14567f?.['entry'][0x0]?.['changes'] ? _0x14567f?.[_0x565dfe(0x9e)][0x0]?.[_0x565dfe(0xcd)][0x0]?.['value']?.['contacts'][0x0]?.['wa_id'] : 'NA', 'status': '', 'star': ![], 'route': _0x565dfe(0x149), 'context': _0x14567f?.['entry'][0x0]?.[_0x565dfe(0xcd)][0x0]?.['value']?.[_0x565dfe(0x6d)][0x0] ? _0x14567f?.[_0x565dfe(0x9e)][0x0]?.[_0x565dfe(0xcd)][0x0]?.[_0x565dfe(0xff)]?.[_0x565dfe(0x6d)][0x0]?.[_0x565dfe(0x93)] : '' }, _0xd49981 = await query(_0x565dfe(0xef), [_0x5ea710]); _0xd49981[_0x565dfe(0xdf)] < 0x1 ? await query(_0x565dfe(0x123), [_0x5ea710, _0x3dadbb, _0x46e7cf, _0x14567f?.[_0x565dfe(0x9e)][0x0]?.[_0x565dfe(0xcd)] ? _0x14567f?.['entry'][0x0]?.['changes'][0x0]?.[_0x565dfe(0xff)]?.[_0x565dfe(0x8e)][0x0]?.[_0x565dfe(0xc0)]?.['name'] : 'NA', _0x14567f?.['entry'][0x0]?.[_0x565dfe(0xcd)] ? _0x14567f?.[_0x565dfe(0x9e)][0x0]?.[_0x565dfe(0xcd)][0x0]?.[_0x565dfe(0xff)]?.[_0x565dfe(0x8e)][0x0]?.['wa_id'] : 'NA', JSON[_0x565dfe(0xa9)](_0x1cd442), 0x0]) : await query(_0x565dfe(0xb7), [_0x46e7cf, JSON['stringify'](_0x1cd442), 0x0, _0x5ea710]); const _0xc51f40 = __dirname + _0x565dfe(0x124) + _0x3dadbb + '/' + _0x5ea710 + _0x565dfe(0xbf); addObjectToFile(_0x1cd442, _0xc51f40); const _0x1f82b4 = getIOInstance(), _0x1cc3fd = await query(_0x565dfe(0xb0), [_0x3dadbb]), _0x1497b8 = await query('SELECT\x20*\x20FROM\x20chats\x20WHERE\x20uid\x20=\x20?', [_0x3dadbb]); _0x1f82b4['to'](_0x1cc3fd[0x0]?.[_0x565dfe(0xd7)])[_0x565dfe(0x13a)](_0x565dfe(0x13f), { 'chats': _0x1497b8 }), _0x1f82b4['to'](_0x1cc3fd[0x0]?.[_0x565dfe(0xd7)])[_0x565dfe(0x13a)]('push_new_msg', { 'msg': _0x1cd442, 'chatId': _0x5ea710 }); } async function saveWebhookConversation(_0x119a46, _0x33ae21) { const _0x57aa53 = _0x28a252; if (_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x10d)] === _0x57aa53(0x14a)) saveMessage(_0x119a46, _0x33ae21, _0x57aa53(0x14a), { 'type': _0x57aa53(0x14a), 'text': { 'preview_url': !![], 'body': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.['text']?.['body'] } }), botWebhook(_0x119a46?.['entry'][0x0]?.['changes'][0x0]?.['value']?.['messages'][0x0]?.[_0x57aa53(0x14a)]?.[_0x57aa53(0x148)], _0x33ae21, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.['contacts'][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'] ? _0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xc0)]?.[_0x57aa53(0xd1)] : 'NA'); else { if (_0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x6d)] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xea)]) { const _0x3abb99 = await query(_0x57aa53(0xad), [_0x33ae21]), _0x5c64cd = await query(_0x57aa53(0xde), [_0x33ae21]), _0x42e98c = _0x5c64cd[0x0]?.[_0x57aa53(0x77)]; if (_0x42e98c) { console[_0x57aa53(0xec)]({ 'metaToken': _0x42e98c }); const _0x1f2161 = await downloadAndSaveMedia(_0x42e98c, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xea)]?.['id']); console[_0x57aa53(0xec)]({ 'fileName': _0x1f2161 }), saveMessage(_0x119a46, _0x33ae21, _0x57aa53(0xea), { 'type': _0x57aa53(0xea), 'image': { 'link': process[_0x57aa53(0xf6)][_0x57aa53(0x118)] + _0x57aa53(0xbd) + _0x1f2161, 'caption': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xea)]?.['caption'] || '' } }); } botWebhook(_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xea)]?.[_0x57aa53(0xe0)] || 'aU1uLzohPGMncyrwlPIb', _0x33ae21, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xc0)]?.['name'] : 'NA'); } else { if (_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xbc)]) { const _0x3fb26e = await query(_0x57aa53(0xad), [_0x33ae21]), _0x46bc65 = await query(_0x57aa53(0xde), [_0x33ae21]), _0x585404 = _0x46bc65[0x0]?.[_0x57aa53(0x77)]; if (_0x585404) { const _0x1e039b = await downloadAndSaveMedia(_0x585404, _0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.['messages'][0x0]?.[_0x57aa53(0xbc)]?.['id']); saveMessage(_0x119a46, _0x33ae21, _0x57aa53(0xbc), { 'type': 'video', 'video': { 'link': process[_0x57aa53(0xf6)][_0x57aa53(0x118)] + '/meta-media/' + _0x1e039b, 'caption': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xbc)]?.[_0x57aa53(0xe0)] } }); } botWebhook(_0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.['video']?.[_0x57aa53(0xe0)] || 'aU1uLzohPGMncyrwlPIb', _0x33ae21, _0x119a46?.['entry'][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xc0)]?.['name'] : 'NA'); } else { if (_0x119a46?.['entry'][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x140)]) { const _0x94b69c = await query(_0x57aa53(0xad), [_0x33ae21]), _0x4b7537 = await query(_0x57aa53(0xde), [_0x33ae21]), _0x1c3710 = _0x4b7537[0x0]?.[_0x57aa53(0x77)]; if (_0x1c3710) { const _0x2135a8 = await downloadAndSaveMedia(_0x1c3710, _0x119a46?.['entry'][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.['document']?.['id']); saveMessage(_0x119a46, _0x33ae21, _0x57aa53(0x140), { 'type': 'document', 'document': { 'link': process['env'][_0x57aa53(0x118)] + '/meta-media/' + _0x2135a8, 'caption': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.['document']?.[_0x57aa53(0xe0)] } }); } botWebhook(_0x119a46?.['entry'][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.['messages'][0x0]?.[_0x57aa53(0x140)]?.[_0x57aa53(0xe0)] || _0x57aa53(0x141), _0x33ae21, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.['contacts'][0x0]?.[_0x57aa53(0xc0)]?.[_0x57aa53(0xd1)] : 'NA'); } else { if (_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.['messages'] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xfd)]) { const _0x1b0f02 = await query(_0x57aa53(0xad), [_0x33ae21]), _0x1bc16d = await query(_0x57aa53(0xde), [_0x33ae21]), _0xa7fa9b = _0x1bc16d[0x0]?.[_0x57aa53(0x77)]; if (_0xa7fa9b) { const _0x22aec1 = await downloadAndSaveMedia(_0xa7fa9b, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0xfd)]?.['id']); saveMessage(_0x119a46, _0x33ae21, 'audio', { 'type': 'audio', 'audio': { 'link': process[_0x57aa53(0xf6)][_0x57aa53(0x118)] + _0x57aa53(0xbd) + _0x22aec1 } }); } botWebhook(_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x140)]?.['caption'] || _0x57aa53(0x141), _0x33ae21, _0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.['contacts'][0x0]?.['profile']?.['name'] : 'NA'); } else { if (_0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x97)]) { const _0x553aec = convertNumberToRandomString(_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xc0)]?.[_0x57aa53(0xd1)] : 'NA'), _0x8c3df9 = __dirname + _0x57aa53(0x124) + _0x33ae21 + '/' + _0x553aec + '.json'; updateMessageObjectInFile(_0x8c3df9, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x97)]?.[_0x57aa53(0x102)], _0x57aa53(0x97), _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x97)]?.[_0x57aa53(0x135)]); const _0x39a1ea = getIOInstance(), _0x2dbe1f = await query(_0x57aa53(0xb0), [_0x33ae21]); _0x39a1ea['to'](_0x2dbe1f[0x0]?.[_0x57aa53(0xd7)])[_0x57aa53(0x13a)](_0x57aa53(0x6f), { 'reaction': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x97)]?.['emoji'], 'chatId': _0x553aec, 'msgId': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x97)]?.[_0x57aa53(0x102)] }); } else { if (_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.['messages'] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.['messages'][0x0]?.[_0x57aa53(0x91)]?.[_0x57aa53(0x92)]) saveMessage(_0x119a46, _0x33ae21, 'text', { 'type': _0x57aa53(0x14a), 'text': { 'preview_url': !![], 'body': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x6d)][0x0]?.['interactive']?.[_0x57aa53(0x92)]?.[_0x57aa53(0x74)] } }), botWebhook(_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x91)]?.[_0x57aa53(0x92)]?.['title'] || 'aU1uLzohPGMncyrwlPIb', _0x33ae21, _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.['profile']?.[_0x57aa53(0xd1)] : 'NA'); else { if (_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x71)] && _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x71)][0x0]?.['id']) { const _0x3a6065 = _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x71)][0x0]?.['id'], _0x4addac = convertNumberToRandomString(_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.[_0x57aa53(0x71)][0x0]?.['recipient_id'], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)] || 'NA'), _0x45b427 = __dirname + _0x57aa53(0x124) + _0x33ae21 + '/' + _0x4addac + '.json'; updateMessageObjectInFile(_0x45b427, _0x3a6065, _0x57aa53(0xb1), _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.['statuses'][0x0]?.[_0x57aa53(0xb1)]); const _0x1df4ac = getIOInstance(), _0x320357 = await query('SELECT\x20*\x20FROM\x20rooms\x20WHERE\x20uid\x20=\x20?', [_0x33ae21]); _0x1df4ac['to'](_0x320357[0x0]?.[_0x57aa53(0xd7)])[_0x57aa53(0x13a)]('update_delivery_status', { 'chatId': _0x4addac, 'status': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x71)][0x0]?.['status'], 'msgId': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.['statuses'][0x0]?.['id'] }), await query(_0x57aa53(0xd3), [_0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.['value']?.['statuses'][0x0]?.[_0x57aa53(0xb1)], _0x3a6065]); } else _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)] && _0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.['messages'][0x0]?.['interactive']?.['list_reply'] && (saveMessage(_0x119a46, _0x33ae21, _0x57aa53(0x14a), { 'type': _0x57aa53(0x14a), 'text': { 'preview_url': !![], 'body': _0x119a46?.[_0x57aa53(0x9e)][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x91)]?.[_0x57aa53(0x75)]?.[_0x57aa53(0x74)] } }), botWebhook(_0x119a46?.['entry'][0x0]?.[_0x57aa53(0xcd)][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x6d)][0x0]?.[_0x57aa53(0x91)]?.[_0x57aa53(0x75)]?.[_0x57aa53(0x74)] || _0x57aa53(0x141), _0x33ae21, _0x119a46?.['entry'][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.['contacts'][0x0]?.[_0x57aa53(0xa7)], _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'] ? _0x119a46?.[_0x57aa53(0x9e)][0x0]?.['changes'][0x0]?.[_0x57aa53(0xff)]?.[_0x57aa53(0x8e)][0x0]?.[_0x57aa53(0xc0)]?.['name'] : 'NA')); } } } } } } } } function updateMessageObjectInFile(_0x268968, _0x4cac3c, _0x361202, _0x41970c) { const _0x2bc796 = _0x28a252; fs[_0x2bc796(0xe3)](_0x268968, 'utf8', (_0x2e3d36, _0x7e5997) => { const _0x29e4c5 = _0x2bc796; if (_0x2e3d36) { console[_0x29e4c5(0x139)](_0x29e4c5(0xa8), _0x2e3d36); return; } try { const _0x2a9a8e = JSON[_0x29e4c5(0x114)](_0x7e5997), _0x12811e = _0x2a9a8e['find'](_0x46411a => _0x46411a[_0x29e4c5(0xa6)] === _0x4cac3c); _0x12811e ? (_0x12811e[_0x361202] = _0x41970c, console[_0x29e4c5(0xec)]('Updated\x20message\x20with\x20metaChatId\x20' + _0x4cac3c + ':\x20' + _0x361202 + _0x29e4c5(0x70) + _0x41970c), fs['writeFile'](_0x268968, JSON['stringify'](_0x2a9a8e, null, 0x2), _0x29e4c5(0x85), _0x3c0ca2 => { const _0x147c03 = _0x29e4c5; if (_0x3c0ca2) { console[_0x147c03(0x139)](_0x147c03(0x12d), _0x3c0ca2); return; } console[_0x147c03(0xec)](_0x147c03(0x107)); })) : console['error']('Message\x20with\x20metaChatId\x20' + _0x4cac3c + _0x29e4c5(0x6a)); } catch (_0x4a1088) { console[_0x29e4c5(0x139)](_0x29e4c5(0x78), _0x4a1088); } }); } async function downloadAndSaveMedia(_0x1755cf, _0x1ffe83) { const _0x252daf = _0x28a252; try { const _0x1dcb7f = _0x252daf(0x125) + _0x1ffe83 + '/', _0x5e3eda = await axios(_0x1dcb7f, { 'headers': { 'Authorization': _0x252daf(0x105) + _0x1755cf } }), _0x4c606e = { 'method': _0x252daf(0x128), 'url': _0x5e3eda?.['data']?.[_0x252daf(0x133)], 'headers': { 'Authorization': _0x252daf(0x105) + _0x1755cf }, 'responseType': 'arraybuffer' }, _0x4b9b15 = await axios(_0x4c606e), _0x51d7f9 = _0x4b9b15[_0x252daf(0xce)][_0x252daf(0xdc)][_0x252daf(0x127)]('/')[0x1], _0x3d1a81 = randomstring[_0x252daf(0xa5)](), _0x399eb1 = __dirname + _0x252daf(0x131) + _0x3d1a81; return fs['writeFileSync'](_0x399eb1 + '.' + _0x51d7f9, _0x4b9b15[_0x252daf(0x11c)]), _0x3d1a81 + '.' + _0x51d7f9; } catch (_0xbb1325) { console[_0x252daf(0x139)](_0x252daf(0x81), _0xbb1325); } } function getCurrentTimestampInTimeZone(_0x3f0193) { const _0x27ab0b = _0x28a252, _0x195480 = moment['tz'](_0x3f0193), _0x384777 = Math[_0x27ab0b(0xe7)](_0x195480[_0x27ab0b(0xa3)]() / 0x3e8); return _0x384777; } function addObjectToFile(_0x549738, _0x27b46e) { const _0x35e01e = _0x28a252, _0x16a7e9 = path[_0x35e01e(0x94)](_0x27b46e); !fs[_0x35e01e(0x8a)](_0x16a7e9) && fs['mkdirSync'](_0x16a7e9, { 'recursive': !![] }); if (fs['existsSync'](_0x27b46e)) { const _0x106dca = JSON[_0x35e01e(0x114)](fs[_0x35e01e(0xab)](_0x27b46e)); Array[_0x35e01e(0x13e)](_0x106dca) ? (_0x106dca['push'](_0x549738), fs[_0x35e01e(0xf9)](_0x27b46e, JSON[_0x35e01e(0xa9)](_0x106dca, null, 0x2))) : console[_0x35e01e(0x139)](_0x35e01e(0x12e)); } else fs[_0x35e01e(0xf9)](_0x27b46e, JSON[_0x35e01e(0xa9)]([_0x549738], null, 0x2)); } function convertNumberToRandomString(_0x5a51d9) { const _0x6caf6a = _0x28a252, _0x2e2a5e = { '0': 'i', '1': 'j', '2': 'I', '3': 'u', '4': 'I', '5': 'U', '6': 'S', '7': 'D', '8': 'B', '9': 'j' }, _0x1df536 = _0x5a51d9[_0x6caf6a(0x14c)](); let _0x50ab2e = ''; for (let _0x2b49e8 = 0x0; _0x2b49e8 < _0x1df536[_0x6caf6a(0xdf)]; _0x2b49e8++) { const _0x351b14 = _0x1df536[_0x2b49e8]; _0x50ab2e += _0x2e2a5e[_0x351b14]; } return _0x50ab2e; } function saveJsonToFile(_0x34be2b, _0x36bd47) { const _0x1c6d26 = _0x28a252, _0x236669 = Date[_0x1c6d26(0xc3)](), _0x5cb0fd = _0x236669 + _0x1c6d26(0xbf), _0x4aa29e = JSON[_0x1c6d26(0xa9)](_0x34be2b, null, 0x2), _0x4dcc56 = _0x36bd47; !fs['existsSync'](_0x4dcc56) && fs[_0x1c6d26(0xae)](_0x4dcc56); const _0x2bcee4 = path['join'](_0x4dcc56, _0x5cb0fd); fs['writeFileSync'](_0x2bcee4, _0x4aa29e), console[_0x1c6d26(0xec)](_0x1c6d26(0x109) + _0x2bcee4); } function isValidEmail(_0x42839f) { const _0x12f887 = _0x28a252, _0x1c0f12 = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; return _0x1c0f12[_0x12f887(0xda)](_0x42839f); } function areMobileNumbersFilled(_0x3e2d95) { const _0x17e969 = _0x28a252; for (const _0x4e4135 of _0x3e2d95) { if (!_0x4e4135[_0x17e969(0x72)]) return ![]; } return !![]; } function getFileExtension(_0x2db3a9) { const _0x503305 = _0x28a252, _0x9072cd = _0x2db3a9[_0x503305(0xc5)]('.'); if (_0x9072cd !== -0x1 && _0x9072cd !== 0x0) { const _0x19f101 = _0x2db3a9[_0x503305(0xd9)](_0x9072cd + 0x1); return _0x19f101[_0x503305(0x14e)](); } return ''; } function writeJsonToFile(_0x3fd8f1, _0x4ac687, _0x15c778) { return new Promise((_0x1559bd, _0x36a01d) => { const _0x574a5b = _0x5de3, _0x3e8f07 = path[_0x574a5b(0x94)](_0x3fd8f1); fs[_0x574a5b(0x111)](_0x3e8f07, { 'recursive': !![] }, function (_0x4a2ba4) { const _0x3cbf68 = _0x574a5b; if (_0x4a2ba4) { _0x15c778 && _0x15c778(_0x4a2ba4); _0x36a01d(_0x4a2ba4); return; } const _0x526c25 = JSON['stringify'](_0x4ac687, null, 0x2); fs[_0x3cbf68(0x90)](_0x3fd8f1, _0x526c25, { 'flag': 'w' }, function (_0x42fc12) { if (_0x42fc12) { _0x15c778 && _0x15c778(_0x42fc12); _0x36a01d(_0x42fc12); return; } const _0x78e882 = 'JSON\x20data\x20has\x20been\x20written\x20to\x20\x27' + _0x3fd8f1 + '\x27.'; _0x15c778 && _0x15c778(null, _0x78e882), _0x1559bd(_0x78e882); }); }); }); } function deleteFileIfExists(_0x1e7e82) { const _0x40587d = _0x28a252; fs[_0x40587d(0xe4)](_0x1e7e82, fs[_0x40587d(0xf0)][_0x40587d(0x11a)], _0x5c2e9e => { const _0x1e61e6 = _0x40587d; if (_0x5c2e9e) { console['error'](_0x1e61e6(0xaa) + _0x1e7e82 + _0x1e61e6(0x79)); return; } fs['unlink'](_0x1e7e82, _0x4817b5 => { const _0x5e3b3c = _0x1e61e6; if (_0x4817b5) { console['error'](_0x5e3b3c(0x9f) + _0x1e7e82 + ':', _0x4817b5); return; } console[_0x5e3b3c(0xec)]('File\x20' + _0x1e7e82 + _0x5e3b3c(0xac)); }); }); } function readJsonFromFile(_0x1fb40c) { const _0x218c57 = _0x28a252; try { const _0x2a4194 = fs['readFileSync'](_0x1fb40c, _0x218c57(0x85)), _0x4a042c = JSON[_0x218c57(0x114)](_0x2a4194); return Array[_0x218c57(0x13e)](_0x4a042c) ? _0x4a042c : []; } catch (_0x3f2415) { return console[_0x218c57(0x139)](_0x218c57(0xa4) + _0x1fb40c + ':', _0x3f2415), []; } } function readJSONFile(_0x1e742a, _0x32b950) { const _0x46f257 = _0x28a252; try { if (!fs['existsSync'](_0x1e742a)) return console[_0x46f257(0x139)](_0x46f257(0xb6), _0x1e742a), []; const _0x3b4664 = fs[_0x46f257(0xab)](_0x1e742a, _0x46f257(0x85)), _0x488117 = JSON[_0x46f257(0x114)](_0x3b4664); if (!Array[_0x46f257(0x13e)](_0x488117)) return console[_0x46f257(0x139)](_0x46f257(0x101), _0x1e742a), []; if (typeof _0x32b950 === _0x46f257(0xd8) && _0x32b950 > 0x0) return _0x488117[_0x46f257(0xb9)](-_0x32b950); return _0x488117; } catch (_0x1bcc6f) { return console[_0x46f257(0x139)]('Error\x20reading\x20JSON\x20file:', _0x1bcc6f), []; } } function updateMetaTempletInMsg(_0x8157dc, _0x3f867f, _0x5c866a, _0x4f5e79) { return new Promise(async (_0x5ca8fe, _0x1e454a) => { const _0xbb0234 = _0x5de3; try { console[_0xbb0234(0xec)]({ 'thisss': _0x8157dc }); const _0x214396 = await query(_0xbb0234(0xad), [_0x8157dc]); if (_0x214396[_0xbb0234(0xdf)] < 0x1) return _0x5ca8fe({ 'success': ![], 'msg': _0xbb0234(0x120) }); const _0x321d3f = getCurrentTimestampInTimeZone(_0x214396[0x0]?.[_0xbb0234(0xc9)] || Date['now']() / 0x3e8), _0x1db684 = { ..._0x3f867f, 'metaChatId': _0x4f5e79, 'timestamp': _0x321d3f }, _0x183c95 = __dirname + _0xbb0234(0x124) + _0x8157dc + '/' + _0x5c866a + _0xbb0234(0xbf); addObjectToFile(_0x1db684, _0x183c95); const _0x309114 = getIOInstance(); await query(_0xbb0234(0xb7), [_0x321d3f, JSON[_0xbb0234(0xa9)](_0x3f867f), 0x0, _0x5c866a]); const _0x1ae8a5 = await query(_0xbb0234(0xb0), [_0x8157dc]); await query('UPDATE\x20chats\x20SET\x20is_opened\x20=\x20?\x20WHERE\x20chat_id\x20=\x20?', [0x1, _0x5c866a]); const _0x4ebf58 = await query('SELECT\x20*\x20FROM\x20chats\x20WHERE\x20uid\x20=\x20?', [_0x8157dc]); _0x309114['to'](_0x1ae8a5[0x0]?.['socket_id'])[_0xbb0234(0x13a)](_0xbb0234(0x13f), { 'chats': _0x4ebf58, 'notificationOff': !![] }), _0x309114['to'](_0x1ae8a5[0x0]?.[_0xbb0234(0xd7)])[_0xbb0234(0x13a)](_0xbb0234(0x10f), { 'msg': _0x1db684, 'chatId': _0x5c866a }), _0x5ca8fe(); } catch (_0x14ddc5) { _0x1e454a(_0x14ddc5); } }); } function _0x1fd4() { const _0x30110f = ['accessSync', 'Jan', 'name', 'Invalid\x20Email', 'UPDATE\x20broadcast_log\x20SET\x20delivery_status\x20=\x20?\x20WHERE\x20meta_msg_id\x20=\x20?', 'join', 'unpaidUsers', 'flow_id', 'socket_id', 'number', 'substring', 'test', 'HEADER', 'content-type', '1169685OxzcZb', 'SELECT\x20*\x20FROM\x20meta_api\x20WHERE\x20uid\x20=\x20?', 'length', 'caption', 'reduce', 'Jun', 'readFile', 'access', 'lookup', 'CAME\x20HERE', 'round', 'dialogType', 'json', 'image', 'createTransport', 'log', 'sender_mobile', '690933vpGDYs', 'SELECT\x20*\x20FROM\x20chats\x20WHERE\x20chat_id\x20=\x20?', 'constants', 'Dec', '/message_templates?name=', 'Error\x20sending\x20message:', 'Feb', 'Jul', 'env', 'Oct', 'flow', 'writeFileSync', '&file_type=', 'UPDATE\x20user\x20SET\x20plan\x20=\x20?,\x20plan_expire\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'BODY', 'audio', 'Message\x20sent\x20successfully!', 'value', 'Please\x20add\x20your\x20meta\x20token\x20and\x20phone\x20number\x20ID', 'Invalid\x20JSON\x20format:', 'message_id', 'node-fetch', '2737dQkNHY', 'Bearer\x20', 'components', 'File\x20updated\x20successfully', 'Apr', 'JSON\x20data\x20saved\x20to\x20', '0\x20days', 'Sep', 'application/octet-stream', 'type', 'Mar', 'push_new_msg', 'createReadStream', 'mkdir', 'msgContent', '\x20days', 'parse', 'SELECT\x20*\x20FROM\x20chats\x20WHERE\x20uid\x20=\x20?', 'for\x20all', 'push', 'FRONTENDURI', 'OUTGOING', 'F_OK', 'message', 'data', 'for_all', 'axios', 'plan', 'user\x20not\x20found', 'sent', 'header', 'INSERT\x20INTO\x20chats\x20(chat_id,\x20uid,\x20last_message_came,\x20sender_name,\x20sender_mobile,\x20last_message,\x20is_opened)\x20VALUES\x20(\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20?,?,?,?,?,?,?\x0a\x20\x20\x20\x20\x20\x20\x20\x20)', '/../conversations/inbox/', 'https://graph.facebook.com/v19.0/', 'Email\x20From', 'split', 'get', '../database/dbpromise', 'DELETE', 'Nov', 'not\x20for\x20all', 'Error\x20writing\x20file:', 'File\x20does\x20not\x20contain\x20an\x20array.', 'pipe', 'No\x20file\x20data\x20found\x20in\x20FormData', '/../client/public/meta-media/', 'mime-types', 'url', '37840FNsaEs', 'emoji', 'VIDEO', 'DOCUMENT', 'NO\x20ANS\x20FOUND', 'error', 'emit', '2KlVRJB', '31518540XgWKvD', 'POST', 'isArray', 'update_conversations', 'document', 'aU1uLzohPGMncyrwlPIb', '{{OTHER_MSG}}', 'header_handle', 'Error\x20response:', 'SELECT\x20*\x20FROM\x20chatbot\x20WHERE\x20uid\x20=\x20?\x20AND\x20active\x20=\x20?', '/uploads?file_length=', 'Aug', 'body', 'INCOMING', 'text', 'unshift', 'toString', '2303322OPLnvj', 'toLowerCase', 'getFullYear', '\x20not\x20found', 'nodemailer', '/message_templates', 'messages', 'Error\x20fetching\x20data:', 'push_new_reaction', '\x20set\x20to\x20', 'statuses', 'mobile', 'includes', 'title', 'list_reply', '/messages', 'access_token', 'Error\x20parsing\x20JSON:', '\x20does\x20not\x20exist.', 'application/json', 'map', 'size', 'email', 'plan_expire', 'exports', 'ceil', 'Error\x20downloading\x20media:', 'ps_l=0;\x20ps_n=0', 'individual', 'file', 'utf8', 'stat', 'createdAt', 'ANS\x20FOUND', 'state', 'existsSync', 'sendMail', 'moment-timezone', 'find', 'contacts', 'UPDATE\x20chats\x20SET\x20is_opened\x20=\x20?\x20WHERE\x20chat_id\x20=\x20?', 'writeFile', 'interactive', 'button_reply', 'context', 'dirname', 'from', '1817536TqNPKj', 'reaction', 'promise', 'chats', 'GET', 'May', '11016198tvmTDv', 'https://graph.facebook.com/v17.0/', 'entry', 'Error\x20deleting\x20file\x20', '/../flow-json/edges/', 'unlinkSync', 'sourceHandle', 'valueOf', 'Error\x20reading\x20JSON\x20file\x20', 'generate', 'metaChatId', 'wa_id', 'Error\x20reading\x20file:', 'stringify', 'File\x20', 'readFileSync', '\x20has\x20been\x20deleted.', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', 'mkdirSync', 'Error\x20downloading\x20and\x20extracting\x20file:', 'SELECT\x20*\x20FROM\x20rooms\x20WHERE\x20uid\x20=\x20?', 'status', 'application/pdf', 'allow_chatbot', '465', 'filter', 'File\x20not\x20found:', 'UPDATE\x20chats\x20SET\x20last_message_came\x20=\x20?,\x20last_message\x20=\x20?,\x20is_opened\x20=\x20?\x20WHERE\x20chat_id\x20=\x20?', 'getMonth', 'slice', 'file_name', 'unzipper', 'video', '/meta-media/', 'whatsapp', '.json', 'profile', '/../flow-json/nodes/', 'target', 'now', 'SELECT\x20*\x20FROM\x20meta_templet_media\x20WHERE\x20templet_name\x20=\x20?', 'lastIndexOf', '/media/', 'OAuth\x20', 'example', 'timezone', 'Extract', 'https://graph.facebook.com/', 'paidUsers', 'changes', 'headers']; _0x1fd4 = function () { return _0x30110f; }; return _0x1fd4(); } function sendAPIMessage(_0x56b892, _0x416521, _0x2ee1e9) { return new Promise(async _0x1dd614 => { const _0x3294fa = _0x5de3; try { const _0x2f6003 = _0x3294fa(0x9d) + _0x416521 + _0x3294fa(0x76), _0x23a6ec = { 'messaging_product': _0x3294fa(0xbe), 'recipient_type': _0x3294fa(0x83), ..._0x56b892 }, _0x478d49 = await fetch(_0x2f6003, { 'method': 'POST', 'headers': { 'Content-Type': _0x3294fa(0x7a), 'Authorization': _0x3294fa(0x105) + _0x2ee1e9 }, 'body': JSON[_0x3294fa(0xa9)](_0x23a6ec) }), _0x3364ea = await _0x478d49[_0x3294fa(0xe9)](); if (_0x3364ea?.[_0x3294fa(0x139)]) return _0x1dd614({ 'success': ![], 'message': _0x3364ea?.[_0x3294fa(0x139)]?.[_0x3294fa(0x11b)] }); _0x1dd614({ 'success': !![], 'message': _0x3294fa(0xfe), 'data': _0x3364ea?.[_0x3294fa(0x6d)][0x0] }); } catch (_0x51e061) { _0x1dd614({ 'success': ![], 'msg': _0x51e061['toString'](), 'err': _0x51e061 }), console[_0x3294fa(0xec)](_0x51e061); } }); } function sendMetaMsg(_0x3d0fcb, _0x3306c9, _0x14a1f5, _0x1faa24, _0x322ccc) { return new Promise(async _0x25a015 => { const _0x351b88 = _0x5de3; try { const _0x20794e = await query('SELECT\x20*\x20FROM\x20meta_api\x20WHERE\x20uid\x20=\x20?', [_0x3d0fcb]), _0x142615 = await query(_0x351b88(0xad), [_0x3d0fcb]); if (_0x20794e[_0x351b88(0xdf)] < 0x1) return _0x25a015({ 'success': ![], 'msg': 'Unable\x20to\x20to\x20find\x20API\x20' }); const _0x1b7f6b = _0x20794e[0x0]?.[_0x351b88(0x77)], _0x5bb30a = _0x20794e[0x0]?.['business_phone_number_id']; if (!_0x1b7f6b || !_0x5bb30a) return _0x25a015({ 'success': ![], 'msg': _0x351b88(0x100) }); const _0x5917f7 = _0x351b88(0x9d) + _0x5bb30a + '/messages', _0x58b632 = { 'messaging_product': 'whatsapp', 'recipient_type': _0x351b88(0x83), 'to': _0x14a1f5, ..._0x3306c9 }, _0x1858b1 = await fetch(_0x5917f7, { 'method': _0x351b88(0x13d), 'headers': { 'Content-Type': _0x351b88(0x7a), 'Authorization': _0x351b88(0x105) + _0x1b7f6b }, 'body': JSON[_0x351b88(0xa9)](_0x58b632) }), _0x177ce2 = await _0x1858b1[_0x351b88(0xe9)](); if (_0x177ce2?.['error']) return _0x25a015({ 'success': ![], 'msg': _0x177ce2?.[_0x351b88(0x139)]?.['message'] }); if (_0x177ce2?.[_0x351b88(0x6d)][0x0]?.['id']) { const _0x151b74 = getCurrentTimestampInTimeZone(_0x142615[0x0]?.[_0x351b88(0xc9)] || Date[_0x351b88(0xc3)]() / 0x3e8), _0x460c9a = { ..._0x1faa24, 'metaChatId': _0x177ce2?.[_0x351b88(0x6d)][0x0]?.['id'], 'timestamp': _0x151b74 }, _0x103c4e = __dirname + _0x351b88(0x124) + _0x3d0fcb + '/' + _0x322ccc + _0x351b88(0xbf); addObjectToFile(_0x460c9a, _0x103c4e), await query(_0x351b88(0xb7), [_0x151b74, JSON[_0x351b88(0xa9)](_0x460c9a), 0x1, _0x322ccc]); const _0x13d10a = getIOInstance(), _0x334cad = await query(_0x351b88(0xb0), [_0x3d0fcb]); await query(_0x351b88(0x8f), [0x1, _0x322ccc]); const _0x679fe3 = await query(_0x351b88(0x115), [_0x3d0fcb]); _0x13d10a['to'](_0x334cad[0x0]?.[_0x351b88(0xd7)])[_0x351b88(0x13a)](_0x351b88(0x13f), { 'chats': _0x679fe3, 'notificationOff': !![] }), _0x13d10a['to'](_0x334cad[0x0]?.['socket_id'])['emit']('push_new_msg', { 'msg': _0x460c9a, 'chatId': _0x322ccc }); } _0x25a015({ 'success': !![] }); } catch (_0x26bf52) { _0x25a015({ 'success': ![], 'msg': _0x26bf52[_0x351b88(0x14c)](), 'err': _0x26bf52 }), console['log'](_0x26bf52); } }); } function mergeArrays(_0x2f24ad, _0x486391) { const _0x174178 = _0x28a252, _0x424792 = _0x486391[_0x174178(0x7b)](_0x4f5aa9 => { const _0x1acd34 = _0x174178, _0x5b2a10 = _0x2f24ad[_0x1acd34(0x8d)](_0x107e10 => _0x107e10[_0x1acd34(0x72)] === _0x4f5aa9[_0x1acd34(0xed)]); if (_0x5b2a10) return { ..._0x4f5aa9, 'contact': _0x5b2a10 }; return _0x4f5aa9; }); return _0x424792; } async function getBusinessPhoneNumber(_0xd5e80a, _0x55bb8c, _0x308e7e) { const _0x200d88 = _0x28a252, _0x30a53f = _0x200d88(0xcb) + _0xd5e80a + '/' + _0x55bb8c, _0x33e295 = { 'method': 'GET', 'headers': { 'Authorization': 'Bearer\x20' + _0x308e7e } }; try { const _0x50a300 = await fetch(_0x30a53f, _0x33e295), _0x220d7e = await _0x50a300[_0x200d88(0xe9)](); return _0x220d7e; } catch (_0x2aec4a) { console[_0x200d88(0x139)](_0x200d88(0x6e), _0x2aec4a); throw _0x2aec4a; } } async function createMetaTemplet(_0x51a490, _0x24c9ea, _0x5aa325, _0x363624) { const _0x18c920 = _0x28a252, _0x290816 = _0x18c920(0xcb) + _0x51a490 + '/' + _0x24c9ea + _0x18c920(0x6c), _0xa8a46 = { 'method': 'POST', 'headers': { 'Authorization': _0x18c920(0x105) + _0x5aa325, 'Content-Type': _0x18c920(0x7a) }, 'body': JSON[_0x18c920(0xa9)](_0x363624) }; try { const _0x549634 = await fetch(_0x290816, _0xa8a46), _0x568bbc = await _0x549634[_0x18c920(0xe9)](); return _0x568bbc; } catch (_0x2daf43) { console[_0x18c920(0x139)](_0x18c920(0x6e), _0x2daf43); throw _0x2daf43; } } async function getAllTempletsMeta(_0x54dc17, _0x599b51, _0x49cbcf) { const _0x11b839 = _0x28a252, _0x16fd9f = _0x11b839(0xcb) + _0x54dc17 + '/' + _0x599b51 + _0x11b839(0x6c), _0x54d68d = { 'method': _0x11b839(0x9a), 'headers': { 'Authorization': 'Bearer\x20' + _0x49cbcf } }; try { const _0x24252f = await fetch(_0x16fd9f, _0x54d68d), _0x180c7f = await _0x24252f['json'](); return _0x180c7f; } catch (_0x2d1e14) { console['error'](_0x11b839(0x6e), _0x2d1e14); throw _0x2d1e14; } } async function delMetaTemplet(_0x2a80fa, _0x2d34d1, _0x166ac3, _0x33d6fe) { const _0x5abe3b = _0x28a252, _0x39d1b8 = _0x5abe3b(0xcb) + _0x2a80fa + '/' + _0x2d34d1 + _0x5abe3b(0xf2) + _0x33d6fe, _0x43ab30 = { 'method': _0x5abe3b(0x12a), 'headers': { 'Authorization': _0x5abe3b(0x105) + _0x166ac3 } }; try { const _0xf0ee85 = await fetch(_0x39d1b8, _0x43ab30), _0x229227 = await _0xf0ee85[_0x5abe3b(0xe9)](); return _0x229227; } catch (_0x1828de) { console[_0x5abe3b(0x139)](_0x5abe3b(0x6e), _0x1828de); throw _0x1828de; } } async function sendMetatemplet(_0x28eec1, _0xbb5be, _0x28529d, _0x3663a2, _0x15c58f) { const _0x1d07b4 = _0x28a252, _0x13c4b2 = _0x3663a2?.[_0x1d07b4(0x106)]?.[_0x1d07b4(0xb5)](_0xdf222a => _0xdf222a[_0x1d07b4(0x10d)] === _0x1d07b4(0xfc)), _0x8b8c69 = _0x3663a2?.[_0x1d07b4(0x106)]?.[_0x1d07b4(0xb5)](_0x5059e3 => _0x5059e3[_0x1d07b4(0x10d)] === _0x1d07b4(0xdb)), _0x2da0cf = _0x8b8c69[_0x1d07b4(0xdf)] > 0x0 ? _0x8b8c69[0x0]?.['format'] : ''; console['log']({ 'template': JSON['stringify'](_0x3663a2) }); let _0x1bf207 = { 'name': _0x3663a2?.[_0x1d07b4(0xd1)], 'language': { 'code': _0x3663a2?.['language'] }, 'components': [] }; if (_0x13c4b2[_0x1d07b4(0xdf)] > 0x0) { const _0x5d2f64 = _0x13c4b2[0x0]?.[_0x1d07b4(0xc8)]?.['body_text'][0x0]?.[_0x1d07b4(0x7b)]((_0x19ddb1, _0x44defd) => ({ 'type': _0x1d07b4(0x14a), 'text': _0x15c58f[_0x44defd] || _0x19ddb1 })); _0x5d2f64 && _0x1bf207[_0x1d07b4(0x106)][_0x1d07b4(0x117)]({ 'type': _0x1d07b4(0x148), 'parameters': _0x5d2f64 }); } if (_0x2da0cf === 'IMAGE' && _0x8b8c69[_0x1d07b4(0xdf)] > 0x0) { const _0x4be0bd = await query('SELECT\x20*\x20FROM\x20meta_templet_media\x20WHERE\x20templet_name\x20=\x20?', [_0x3663a2?.[_0x1d07b4(0xd1)]]); _0x1bf207[_0x1d07b4(0x106)]['unshift']({ 'type': _0x1d07b4(0x122), 'parameters': [{ 'type': _0x1d07b4(0xea), 'image': { 'link': _0x4be0bd['length'] > 0x0 ? process[_0x1d07b4(0xf6)][_0x1d07b4(0x118)] + '/media/' + _0x4be0bd[0x0]?.[_0x1d07b4(0xba)] : _0x8b8c69[0x0]['example']?.[_0x1d07b4(0x143)][0x0] } }] }); } if (_0x2da0cf === _0x1d07b4(0x136) && _0x8b8c69[_0x1d07b4(0xdf)] > 0x0) { const _0x5da33b = await query(_0x1d07b4(0xc4), [_0x3663a2?.[_0x1d07b4(0xd1)]]); _0x1bf207[_0x1d07b4(0x106)][_0x1d07b4(0x14b)]({ 'type': 'header', 'parameters': [{ 'type': _0x1d07b4(0xbc), 'video': { 'link': _0x5da33b[_0x1d07b4(0xdf)] > 0x0 ? process[_0x1d07b4(0xf6)][_0x1d07b4(0x118)] + _0x1d07b4(0xc6) + _0x5da33b[0x0]?.[_0x1d07b4(0xba)] : _0x8b8c69[0x0][_0x1d07b4(0xc8)]?.[_0x1d07b4(0x143)][0x0] } }] }); } if (_0x2da0cf === _0x1d07b4(0x137) && _0x8b8c69[_0x1d07b4(0xdf)] > 0x0) { const _0x3cb475 = await query(_0x1d07b4(0xc4), [_0x3663a2?.['name']]); _0x1bf207['components'][_0x1d07b4(0x14b)]({ 'type': _0x1d07b4(0x122), 'parameters': [{ 'type': _0x1d07b4(0x140), 'document': { 'link': _0x3cb475[_0x1d07b4(0xdf)] > 0x0 ? process['env'][_0x1d07b4(0x118)] + _0x1d07b4(0xc6) + _0x3cb475[0x0]?.['file_name'] : _0x8b8c69[0x0][_0x1d07b4(0xc8)]?.[_0x1d07b4(0x143)][0x0], 'filename': _0x1d07b4(0x140) } }] }); } const _0x443965 = 'https://graph.facebook.com/v18.0/' + _0xbb5be + _0x1d07b4(0x76), _0x22d01c = { 'messaging_product': _0x1d07b4(0xbe), 'to': _0x28eec1, 'type': 'template', 'template': _0x1bf207 }, _0x55ab6d = { 'method': _0x1d07b4(0x13d), 'headers': { 'Authorization': _0x1d07b4(0x105) + _0x28529d, 'Content-Type': _0x1d07b4(0x7a) }, 'body': JSON[_0x1d07b4(0xa9)](_0x22d01c) }; try { const _0x26974e = await fetch(_0x443965, _0x55ab6d), _0x2730b5 = await _0x26974e[_0x1d07b4(0xe9)](); return console['log']({ 'data': JSON[_0x1d07b4(0xa9)](_0x2730b5) }), console[_0x1d07b4(0xec)]({ 'body': JSON[_0x1d07b4(0xa9)](_0x22d01c) }), _0x2730b5; } catch (_0x511fda) { console[_0x1d07b4(0x139)](_0x1d07b4(0xf3), _0x511fda); throw _0x511fda; } } function _0x5de3(_0x3840f3, _0x2d543a) { const _0x1fd407 = _0x1fd4(); return _0x5de3 = function (_0x5de3fa, _0x2ff590) { _0x5de3fa = _0x5de3fa - 0x6a; let _0x4c0ca0 = _0x1fd407[_0x5de3fa]; return _0x4c0ca0; }, _0x5de3(_0x3840f3, _0x2d543a); } function getFileInfo(_0x3d6d9e) { return new Promise((_0xb0f78, _0xc73cc5) => { const _0x2cc138 = _0x5de3; fs[_0x2cc138(0x86)](_0x3d6d9e, (_0x4fcfda, _0x23abf3) => { const _0x1d21eb = _0x2cc138; if (_0x4fcfda) _0xc73cc5(_0x4fcfda); else { const _0x3d5b55 = _0x23abf3[_0x1d21eb(0x7c)], _0x44824f = mime[_0x1d21eb(0xe5)](_0x3d6d9e) || _0x1d21eb(0x10c); _0xb0f78({ 'fileSizeInBytes': _0x3d5b55, 'mimeType': _0x44824f }); } }); }); } async function getSessionUploadMediaMeta(_0x3de08f, _0x6910ba, _0x51a0dd, _0x41f7ec, _0x78868c) { const _0x4034d0 = _0x28a252, _0x9c20e1 = 'https://graph.facebook.com/' + _0x3de08f + '/' + _0x6910ba + _0x4034d0(0x146) + _0x41f7ec + _0x4034d0(0xfa) + _0x78868c, _0x318e7b = { 'method': 'POST', 'headers': { 'Authorization': _0x4034d0(0x105) + _0x51a0dd } }; try { const _0x384f51 = await fetch(_0x9c20e1, _0x318e7b), _0x1b6f57 = await _0x384f51[_0x4034d0(0xe9)](); return _0x1b6f57; } catch (_0x5059ac) { console['error']('Error\x20fetching\x20data:', _0x5059ac); throw _0x5059ac; } } async function uploadFileMeta(_0x5c1df8, _0x24c04e, _0x459333, _0x3e1fca) { return new Promise(async _0x513382 => { const _0x9793c1 = _0x5de3; try { const _0x213ce5 = fs['readFileSync'](_0x24c04e), _0x3926fc = _0x9793c1(0xcb) + _0x459333 + '/' + _0x5c1df8, _0x1b4ffa = { 'method': _0x9793c1(0x13d), 'headers': { 'Authorization': _0x9793c1(0xc7) + _0x3e1fca, 'Content-Type': _0x9793c1(0xb2), 'Cookie': _0x9793c1(0x82) }, 'body': _0x213ce5 }, _0x448cb7 = await fetch(_0x3926fc, _0x1b4ffa); if (!_0x448cb7['ok']) { const _0x4e96ed = await _0x448cb7['json'](); return console[_0x9793c1(0x139)](_0x9793c1(0x144), _0x4e96ed), _0x513382({ 'success': ![], 'data': _0x4e96ed }); } const _0xdbf68 = await _0x448cb7[_0x9793c1(0xe9)](); return _0x513382({ 'success': !![], 'data': _0xdbf68 }); } catch (_0x1ac8d2) { return _0x513382({ 'success': ![], 'data': _0x1ac8d2 }); } }); } async function getMetaNumberDetail(_0x2c0b5c, _0x194d50, _0x98404c) { const _0x14efd2 = _0x28a252, _0x370deb = _0x14efd2(0xcb) + _0x2c0b5c + '/' + _0x194d50, _0x3e0cff = { 'method': _0x14efd2(0x9a), 'headers': { 'Authorization': _0x14efd2(0x105) + _0x98404c, 'Content-Type': 'application/json' } }; try { const _0x2bed42 = await fetch(_0x370deb, _0x3e0cff), _0x402d1d = await _0x2bed42[_0x14efd2(0xe9)](); return _0x402d1d; } catch (_0x45ad97) { console[_0x14efd2(0x139)](_0x14efd2(0x6e), _0x45ad97); throw _0x45ad97; } } function addDaysToCurrentTimestamp(_0x240e03) { const _0x158dba = _0x28a252; let _0x431a9e = Date[_0x158dba(0xc3)](), _0x4d0a64 = _0x240e03 * 0x18 * 0x3c * 0x3c * 0x3e8, _0x2e9284 = _0x431a9e + _0x4d0a64; return _0x2e9284; } async function updateUserPlan(_0xb0851f, _0x7c7e9d) { const _0x2c9010 = _0x28a252; console[_0x2c9010(0xec)]({ 'plan': _0xb0851f }); const _0x4c5a9e = parseInt(_0xb0851f?.['plan_duration_in_days'] || 0x0), _0x444e15 = addDaysToCurrentTimestamp(_0x4c5a9e); await query(_0x2c9010(0xfb), [JSON[_0x2c9010(0xa9)](_0xb0851f), _0x444e15, _0x7c7e9d]); } function validateEmail(_0x49f04a) { const _0x1e2158 = _0x28a252, _0x80bb29 = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; return _0x80bb29[_0x1e2158(0xda)](String(_0x49f04a)[_0x1e2158(0x14e)]()); } function sendEmail(_0x151854, _0x669b11, _0x3bbfc0, _0x2b1105, _0x2d3ee3, _0xa42e3f, _0x306d76, _0x4aea70) { return new Promise(async _0xa5f294 => { const _0xa0778d = _0x5de3; try { let _0x20afc7 = nodemailer[_0xa0778d(0xeb)]({ 'host': _0x151854, 'port': _0x669b11, 'secure': _0x669b11 === _0xa0778d(0xb4) ? !![] : ![], 'auth': { 'user': _0x3bbfc0, 'pass': _0x2b1105 } }), _0x741136 = await _0x20afc7[_0xa0778d(0x8b)]({ 'from': (_0x306d76 || _0xa0778d(0x126)) + '\x20<' + _0x3bbfc0 + '>', 'to': _0x4aea70, 'subject': _0xa42e3f || 'Email', 'html': _0x2d3ee3 }); _0xa5f294({ 'success': !![], 'info': _0x741136 }); } catch (_0x2bf424) { _0xa5f294({ 'success': ![], 'err': _0x2bf424[_0xa0778d(0x14c)]() || _0xa0778d(0xd2) }); } }); } function getUserSignupsByMonth(_0x561fe7) { const _0x4d9fad = _0x28a252, _0x5cc2f8 = [_0x4d9fad(0xd0), _0x4d9fad(0xf4), _0x4d9fad(0x10e), _0x4d9fad(0x108), _0x4d9fad(0x9b), _0x4d9fad(0xe2), 'Jul', _0x4d9fad(0x147), _0x4d9fad(0x10b), _0x4d9fad(0xf7), _0x4d9fad(0x12b), _0x4d9fad(0xf1)], _0x441809 = new Date(), _0x3e3afd = _0x441809['getFullYear'](), { paidUsers: _0x23c7b4, unpaidUsers: _0x536cc4 } = _0x561fe7[_0x4d9fad(0xe1)]((_0x41ff9f, _0x5004a4) => { const _0xfdaee1 = _0x4d9fad, _0x467bf1 = _0x5004a4['plan_expire'] ? new Date(parseInt(_0x5004a4[_0xfdaee1(0x7e)])) : null, _0x3d324c = _0x467bf1 ? _0x467bf1 > _0x441809 : ![]; return _0x3d324c ? _0x41ff9f[_0xfdaee1(0xcc)]['push'](_0x5004a4) : _0x41ff9f[_0xfdaee1(0xd5)][_0xfdaee1(0x117)](_0x5004a4), _0x41ff9f; }, { 'paidUsers': [], 'unpaidUsers': [] }), _0x1d5b1d = _0x5cc2f8['map']((_0x204962, _0xfd01d9) => { const _0xbac980 = _0x4d9fad, _0x55d4e0 = _0x23c7b4['filter'](_0x2869da => { const _0x174321 = _0x5de3, _0x4d6e28 = new Date(_0x2869da[_0x174321(0x87)]); return _0x4d6e28[_0x174321(0xb8)]() === _0xfd01d9 && _0x4d6e28[_0x174321(0x14f)]() === _0x3e3afd; }), _0x47cf7c = _0x55d4e0[_0xbac980(0xdf)], _0x4f3906 = _0x55d4e0[_0xbac980(0x7b)](_0x45d4eb => _0x45d4eb[_0xbac980(0x7d)]); return { 'month': _0x204962, 'numberOfSignups': _0x47cf7c, 'userEmails': _0x4f3906, 'paid': !![] }; }), _0x25f75a = _0x5cc2f8[_0x4d9fad(0x7b)]((_0x463b0f, _0x496bd6) => { const _0x54025e = _0x4d9fad, _0x5117c5 = _0x536cc4[_0x54025e(0xb5)](_0xea3c9b => { const _0x1b3c0d = _0x54025e, _0x390372 = new Date(_0xea3c9b[_0x1b3c0d(0x87)]); return _0x390372[_0x1b3c0d(0xb8)]() === _0x496bd6 && _0x390372[_0x1b3c0d(0x14f)]() === _0x3e3afd; }), _0x2a0180 = _0x5117c5[_0x54025e(0xdf)], _0x29531e = _0x5117c5[_0x54025e(0x7b)](_0x179afd => _0x179afd[_0x54025e(0x7d)]); return { 'month': _0x463b0f, 'numberOfSignups': _0x2a0180, 'userEmails': _0x29531e, 'paid': ![] }; }); return { 'paidSignupsByMonth': _0x1d5b1d, 'unpaidSignupsByMonth': _0x25f75a }; } function getUserOrderssByMonth(_0x11924e) { const _0x271a18 = _0x28a252, _0x56c54c = ['Jan', _0x271a18(0xf4), _0x271a18(0x10e), _0x271a18(0x108), 'May', _0x271a18(0xe2), _0x271a18(0xf5), _0x271a18(0x147), 'Sep', _0x271a18(0xf7), 'Nov', _0x271a18(0xf1)], _0x4c24f8 = new Date(), _0x3c5acc = _0x4c24f8[_0x271a18(0x14f)](), _0x408364 = Array[_0x271a18(0x95)]({ 'length': 0xc }, (_0x477761, _0x2b1f41) => { const _0x14e1ca = _0x271a18, _0x2370b4 = _0x56c54c[_0x2b1f41], _0x4434dd = _0x11924e[_0x14e1ca(0xb5)](_0x14ca45 => { const _0xc607a6 = _0x14e1ca, _0x44f95b = new Date(_0x14ca45[_0xc607a6(0x87)]); return _0x44f95b[_0xc607a6(0xb8)]() === _0x2b1f41 && _0x44f95b[_0xc607a6(0x14f)]() === _0x3c5acc; }), _0x3fa372 = _0x4434dd[_0x14e1ca(0xdf)]; return { 'month': _0x2370b4, 'numberOfOders': _0x3fa372 }; }); return _0x408364; } function getNumberOfDaysFromTimestamp(_0x127241) { const _0x463f6c = _0x28a252; if (!_0x127241 || isNaN(_0x127241)) return _0x463f6c(0x10a); const _0x549f2f = Date['now'](); if (_0x127241 <= _0x549f2f) return '0\x20days'; const _0x56a9d9 = 0x3e8 * 0x3c * 0x3c * 0x18, _0x2d4c1f = Math[_0x463f6c(0x80)]((_0x127241 - _0x549f2f) / _0x56a9d9); return _0x2d4c1f + _0x463f6c(0x113); } async function getUserPlayDays(_0x17e750) { const _0x283141 = _0x28a252, _0x355d8e = await query('SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', [_0x17e750]); if (_0x355d8e[_0x283141(0xdf)] < 0x1) return 0x0; if (!_0x355d8e[0x0][_0x283141(0x7e)]) return 0x0; else { const _0x7c3e57 = getNumberOfDaysFromTimestamp(_0x355d8e[0x0]?.[_0x283141(0x7e)]); return _0x7c3e57; } } function folderExists(_0x226876) { const _0x7b26b2 = _0x28a252; try { return fs[_0x7b26b2(0xcf)](_0x226876, fs[_0x7b26b2(0xf0)][_0x7b26b2(0x11a)]), !![]; } catch (_0x84e506) { return ![]; } } async function downloadAndExtractFile(_0x819a7b, _0x4f3397) { const _0x4f5c48 = _0x28a252; try { const _0x1ed1e3 = _0x819a7b[_0x4f5c48(0x84)]; if (!_0x1ed1e3) return { 'success': ![], 'msg': _0x4f5c48(0x130) }; const _0x5df7d4 = path[_0x4f5c48(0xd4)](_0x4f3397, _0x1ed1e3[_0x4f5c48(0xd1)]); return await new Promise((_0x5d1f64, _0x86d6fd) => { _0x1ed1e3['mv'](_0x5df7d4, _0x3187d5 => { _0x3187d5 ? _0x86d6fd(_0x3187d5) : _0x5d1f64(); }); }), await fs[_0x4f5c48(0x110)](_0x5df7d4)[_0x4f5c48(0x12f)](unzipper[_0x4f5c48(0xca)]({ 'path': _0x4f3397 }))[_0x4f5c48(0x98)](), fs[_0x4f5c48(0xa1)](_0x5df7d4), { 'success': !![], 'msg': 'File\x20downloaded\x20and\x20extracted\x20successfully' }; } catch (_0x2be0e1) { return console[_0x4f5c48(0x139)](_0x4f5c48(0xaf), _0x2be0e1), { 'success': ![], 'msg': _0x2be0e1[_0x4f5c48(0x11b)] }; } } module[_0x28a252(0x7f)] = { 'isValidEmail': isValidEmail, 'downloadAndExtractFile': downloadAndExtractFile, 'folderExists': folderExists, 'sendAPIMessage': sendAPIMessage, 'sendEmail': sendEmail, 'getUserPlayDays': getUserPlayDays, 'getNumberOfDaysFromTimestamp': getNumberOfDaysFromTimestamp, 'getUserOrderssByMonth': getUserOrderssByMonth, 'getUserSignupsByMonth': getUserSignupsByMonth, 'validateEmail': validateEmail, 'updateUserPlan': updateUserPlan, 'getFileInfo': getFileInfo, 'uploadFileMeta': uploadFileMeta, 'getMetaNumberDetail': getMetaNumberDetail, 'getSessionUploadMediaMeta': getSessionUploadMediaMeta, 'sendMetaMsg': sendMetaMsg, 'updateMetaTempletInMsg': updateMetaTempletInMsg, 'sendMetatemplet': sendMetatemplet, 'delMetaTemplet': delMetaTemplet, 'getAllTempletsMeta': getAllTempletsMeta, 'createMetaTemplet': createMetaTemplet, 'getBusinessPhoneNumber': getBusinessPhoneNumber, 'botWebhook': botWebhook, 'mergeArrays': mergeArrays, 'readJSONFile': readJSONFile, 'writeJsonToFile': writeJsonToFile, 'getCurrentTimestampInTimeZone': getCurrentTimestampInTimeZone, 'saveWebhookConversation': saveWebhookConversation, 'saveJsonToFile': saveJsonToFile, 'readJsonFromFile': readJsonFromFile, 'deleteFileIfExists': deleteFileIfExists, 'areMobileNumbersFilled': areMobileNumbersFilled, 'getFileExtension': getFileExtension };